server {
    listen       7777;
    server_name  "";
    root   /var/www/operator-ui/;

    location =  "/login" {
         try_files uri $uri/ /login.html;
    }
    
    location = "/login.html/" {
         alias /var/www/operator-ui/;
         expires 30s;
    }

    location = "/config.js" {
        alias /var/www/conf/operator-ui.js;
        expires 30s;
    }

    location ~ "^/(?!storage|login|cityservices|api)\w+" {
         alias  /var/www/operator-ui/;
         try_files $uri $uri/ /index.html;
    }
    
    location = index.html {
             expires 30s;     
    }
}

server {
    listen  7778;
    server_name  "";

    root   /var/www/frontend-ui/;
    index index.html;

    location = "/cfg.js" {
        alias /var/www/conf/frontend-ui.js;
        expires 30s;
    }

    location = "/confirmation.html" {
        alias /var/www/conf/confirmation.html;
        expires 30s;
    }

    location / {
        try_files $uri $uri/ /index.html;
    }
}

# user access to all modules (aaa, push, email, sms, storage, ...)
server {
    listen 80 default_server;
    server_name _;#this tells nginx to handle all requests
    resolver 127.0.0.11;
    proxy_buffering off;

    location ~* ^/(webadmin|script/v3/config) {
        proxy_pass http://tomcat:8080;
    }

    location @unauth_error {
        default_type application/json;
        add_header 'Access-Control-Allow-Origin' * always;
        return 401 '{ "message" : "Authorization failed, may be incorrect X-MP-APPLICATION-GROUP-ID, X-MP-APPLICATION-ID, or expired session X-MP-USER-TOKEN" }';
    }

    location @forbidden_error {
        default_type application/json;
        add_header 'Access-Control-Allow-Origin' * always;
        add_header X-MP-ERROR $x_error always;
        return 403 '{ "message" : "Authorization failed, please check X-MP-ERROR header for more info" }';
    }

    location @system_error {
        add_header 'Access-Control-Allow-Origin' * always;
        default_type application/json;
        return 500 '{ "message" : "Internal system error" }';
    }

    location = /auth {
       internal;
       proxy_pass http://aaa:8080/aaa/v3/internal/user/authorize;
       proxy_pass_request_body off;
       proxy_set_header Content-Length "";
       proxy_set_header X-MP-REQUESTED-URL $request_uri;
    }

    location ~* /storage/v3/api/invoker/mdm {
        proxy_pass  http://storage:8080;
    }

    # swagger2 and swagger-ui 6 locations without authorization
    location ~* ^/([\w\-]+)/v3/swagger-ui.html {
        proxy_pass  http://$1:8080;
    }
    location ~* ^/([\w\-]+)/v3/webjars/springfox-swagger-ui/ {
        proxy_pass  http://$1:8080;
    }
    location ~* ^/([\w\-]+)/v3/swagger-resources {
        proxy_pass  http://$1:8080;
    }
    location ~* ^/([\w\-]+)/v3/v2/api-docs {
        proxy_pass  http://$1:8080;
    }
    location ~* ^/([\w\-]+)/v3/configuration/ui {
        proxy_pass  http://$1:8080;
    }
    location ~* ^/([\w\-]+)/v3/configuration/security {
        proxy_pass  http://$1:8080;
    }

    # pass confirmation url to aaa
    location ~* ^/aaa/v3/api/confirm/web {
        proxy_pass http://aaa:8080;
    }

    # for webhooks and redirects coming from payments acquirer
    location ~* ^/payments/v3/acquirer {
        proxy_pass http://payments:8080;
    }

    location ~* /telegram-bot/v3/webhook {
      proxy_pass http://telegram-bot:8080;
    }

    #storage auth mobile begin
    location = /authuser {
        internal;
        proxy_pass      http://storage:8080/storage/v3/internal/storage/check/user;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-MP-REQUESTED-URL $request_uri;
    }

    location ~* ^/storage/v3/backend/(api|api/batch)/execute/(\w+)/(\w+) {

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            #
            # Custom headers and headers various browsers *should* be OK with but aren't
            #
            add_header 'Access-Control-Allow-Headers' 'X-MP-USER-ID,X-MP-APPLICATION-GROUP-ID,X-MP-DEVICE-ID,X-MP-APPLICATION-ID,X-MP-APPLICATION-INSTANCE-ID,X-REAL-IP,X-MP-USER-TOKEN,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
            #
            # Tell client that this pre-flight info is valid for 20 days
            #
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        add_header 'Access-Control-Allow-Origin' * always;
        add_header 'Access-Control-Expose-Headers' 'X-MP-RESPONSE-CODE,X-MP-RESPONSE-MESSAGE,X-MP-RESPONSE-SUCCESSFUL' always;

        error_page 500     =  @system_error;
        error_page 401    =  @unauth_error;
        auth_request /auth;
        auth_request_set $x_user        $upstream_http_x_mp_user_id;
        auth_request_set $x_app_group   $upstream_http_x_mp_application_group_id;
        auth_request_set $x_device      $upstream_http_x_mp_device_id;
        auth_request_set $x_app         $upstream_http_x_mp_application_id;
        auth_request_set $x_app_inst    $upstream_http_x_mp_application_instance_id;
        auth_request_set $x_service     $upstream_http_x_mp_service_id;

        proxy_set_header X-MP-APPLICATION-GROUP-ID      $x_app_group;
        proxy_set_header X-MP-APPLICATION-ID            $x_app;
        proxy_set_header X-MP-USER-ID                   $x_user;
        proxy_set_header X-MP-APPLICATION-INSTANCE-ID   $x_app_inst;

        proxy_pass       http://storage:8080;
    }
    #end


    # access from outside to module REST admin API
    location ~* ^/([\w\-]+)/v3/admin/ {
        proxy_pass  http://$1:8080;
    }
    # access from outside to healthcheck
    location ~* ^/([\w\-]+)/v3/actuator/health  {
        proxy_pass  http://$1:8080;
    }
    
    # cityservices backend with CORS
    location ~* ^/cityservices/ {
      if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'X-MP-USER-ID,X-MP-APPLICATION-GROUP-ID,X-MP-DEVICE-ID,X-MP-APPLICATION-ID,X-MP-APPLICATION-INSTANCE-ID,X-REAL-IP,X-MP-USER-TOKEN,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
      }
      add_header 'Access-Control-Allow-Origin' * always;
      add_header 'Access-Control-Expose-Headers' 'X-MP-RESPONSE-CODE,X-MP-RESPONSE-MESSAGE,X-MP-RESPONSE-SUCCESSFUL' always;
      proxy_pass http://cityservice:8080;
    }

    # access from outside to module REST API with authorization via AAA (see location /auth)
    location ~* ^/([\w\-]+)/ {

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            #
            # Custom headers and headers various browsers *should* be OK with but aren't
            #
            add_header 'Access-Control-Allow-Headers' 'X-MP-USER-ID,X-MP-APPLICATION-GROUP-ID,X-MP-DEVICE-ID,X-MP-APPLICATION-ID,X-MP-APPLICATION-INSTANCE-ID,X-REAL-IP,X-MP-USER-TOKEN,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
            #
            # Tell client that this pre-flight info is valid for 20 days
            #
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        add_header 'Access-Control-Allow-Origin' * always;
        add_header 'Access-Control-Expose-Headers' 'X-MP-RESPONSE-CODE,X-MP-RESPONSE-MESSAGE,X-MP-RESPONSE-SUCCESSFUL' always;

        # we are hiding details of 500 error
        error_page 500     =  @system_error;

        # only authorizator (AAA) can throws 401 or 403
        error_page 401    =  @unauth_error; #reprecents authorization system error
        error_page 403    =  @forbidden_error; #reprecents serialization errors

        auth_request /auth;
        # $upstream_ - get variable from auth
        auth_request_set $x_user        $upstream_http_x_mp_user_id;
        auth_request_set $x_app_group   $upstream_http_x_mp_application_group_id;
        auth_request_set $x_device      $upstream_http_x_mp_device_id;
        auth_request_set $x_app         $upstream_http_x_mp_application_id;
        auth_request_set $x_app_inst    $upstream_http_x_mp_application_instance_id;
        auth_request_set $x_error       $upstream_http_x_mp_error;

        # proxy_set_header - pass header to proxied module (aaa, push, ...)
        proxy_set_header X-MP-USER-ID                  $x_user;
        proxy_set_header X-MP-APPLICATION-GROUP-ID     $x_app_group;
        proxy_set_header X-MP-DEVICE-ID                $x_device;
        proxy_set_header X-MP-APPLICATION-ID           $x_app;
        proxy_set_header X-MP-APPLICATION-INSTANCE-ID  $x_app_inst;
        proxy_set_header X-REAL-IP 		       $remote_addr;

        proxy_pass       http://$1:8080;
    }
}


#Server for service accessors (API)
server {

    listen 9090 default_server;
    server_name _;
    resolver 127.0.0.11;
    proxy_buffering off;

    location @unauth_error {
        default_type application/json;
        return 401 '{ "message" : "Authorization failed, may be incorrect X-MP-APPLICATION-GROUP-ID or expired session X-MP-SERVICE-TOKEN" }';
    }

    location @system_error {
        default_type application/json;
        return 500 '{ "message" : "Internal system error" }';
    }

    location @forbidden_error {
        default_type application/json;
        add_header X-MP-ERROR $x_error always;
        return 403 '{ "message" : "Authorization failed, please check X-MP-ERROR header for more info" }';
    }

    location ~* ^/cityservices/ {
      if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'X-MP-USER-ID,X-MP-APPLICATION-GROUP-ID,X-MP-DEVICE-ID,X-MP-APPLICATION-ID,X-MP-APPLICATION-INSTANCE-ID,X-REAL-IP,X-MP-USER-TOKEN,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
      }
      add_header 'Access-Control-Allow-Origin' * always;
      add_header 'Access-Control-Expose-Headers' 'X-MP-RESPONSE-CODE,X-MP-RESPONSE-MESSAGE,X-MP-RESPONSE-SUCCESSFUL' always;
      proxy_pass http://cityservice:8080;
    }

    location = /auth {
       internal;
       proxy_pass http://aaa:8080/aaa/v3/internal/service/authorize;
       proxy_pass_request_body off;
       proxy_set_header Content-Length "";
       proxy_set_header X-MP-REQUESTED-URL $request_uri;
    }

    location ~* ^/aaa/v3/api/service/auth {
        proxy_pass http://aaa:8080;
    }

    #storage auth service begin
    location = /authservice {
        internal;
        proxy_pass      http://storage:8080/storage/v3/internal/storage/check/service;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-MP-REQUESTED-URL $request_uri;
    }

    location ~* ^/storage/v3/backend/(api|api/batch)/execute/(\w+)/(\w+) {
        error_page 500     =  @system_error;
        error_page 401     =  @unauth_error;
        auth_request /auth;
        auth_request_set $x_app_group   $upstream_http_x_mp_application_group_id;
        auth_request_set $x_service     $upstream_http_x_mp_service_id;

        proxy_set_header X-MP-APPLICATION-GROUP-ID     $x_app_group;
        proxy_set_header X-MP-SERVICE-ID               $x_service;

        proxy_pass       http://storage:8080;
    }
    #end

    location ~* ^/([\w\-]+)/ {
        # we are hiding details of 500 error
        error_page 500     =  @system_error;

        # only authorizator (AAA) can throws 401 or 403
        error_page 401     =  @unauth_error;
        error_page 403     =  @forbidden_error; #reprecents serialization errors

        auth_request /auth;
        auth_request_set $x_app_group   $upstream_http_x_mp_application_group_id;
        auth_request_set $x_error       $upstream_http_x_mp_error;
	    auth_request_set $x_service     $upstream_http_x_mp_service_id;

        proxy_set_header X-MP-APPLICATION-GROUP-ID     $x_app_group;
        proxy_set_header X-REAL-IP                     $remote_addr;
	    proxy_set_header X-MP-SERVICE-ID               $x_service;

        proxy_pass       http://$1:8080;
    }
}